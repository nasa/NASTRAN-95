#!/bin/csh
unalias rm
clear
set   rfdir=/usr/users/bob/nast95/rf
set nasexec=/usr/users/bob/nast95/bin/nastrn.exe
set naschk=/usr/users/bob/nast95/bin/chkfil.exe
set probname = $1
echo ' '
  if ( $probname == '' ) then
  echo '                                 NASTRAN'
  echo ' '
  echo -n 'Please give problem id for designation of files ===> '
  set probname = $<
  endif
# set ft01=$probname.pun
set dbmem=12000000
set ocmem=2000000
set ft01=none
set ft04=$probname.dic
set ft03=$probname.log
set ft05=$probname.inp
set ft06=$probname.out
set ft08=none
# set ft11=$probname.out11
set ft11=none
set plt2=none
set script=$probname.cmd
set nasscr=$cwd/temp$$
set ft12=none
set ft15=none
set ft16=none
set sof1=none
set sof2=none
set sft12=
set nptp=$probname.nptp
set optp=none
   if ( ! -e  $ft05 ) then
   set sft05='(#### does not exist ####)'
   else 
   set sft05=
   if ( -e nogood1 ) then
   rm nogood1
   endif
   if ( -e nogood2 ) then
   rm nogood2
   endif
   if ( -e nogood3 ) then
   rm nogood3
   endif
   $naschk < $ft05
	if ( -e nogood1 ) then 
	set ft04=$probname.dic
        rm nogood1
	endif
	if ( -e nogood2 ) then
	set plt2=$probname.plt
        rm nogood2
	endif
	if ( -e nogood3) then
	set ft04=$probname.dic
	set plt2=$probname.plt
        rm nogood3
	endif
   endif
set nogo=1
while ( $nogo != 0 )
clear 
echo '                               NASTRAN'
echo ' '
set snasexec=
set sft01=
set sft04=
set sft03=
set sft06=
set sft08=
set sft11=
set sft15=
set sft16=
set splt2 =
set snptp=
set soptp=
set sdir=
set sscript=
set ssof1=
set ssof2=
set nogo=1
   if ( $nptp != 'none' ) then 
      if ( -e $nptp ) then 
      set snptp=' (#### will be replaced ####)'
      endif
      if ( -e "$ft04" ) then
      set sft04=' (#### will be replaced ####)'
      endif
   endif 
   if ( $sof1 != 'none' ) then
      if( -e $sof1 ) then
      set ssof1=
      else set ssof1='(#### does not exist ####)'
      endif
   endif
   if ( $sof2 != 'none' ) then
      if( -e $sof2 ) then
      set ssof2=
      else set ssof2='(#### does not exist ####)'
      endif
   endif
   if ( -e $plt2 ) then
   set splt2='(#### will be replaced ####)'
   else set splt2=
   endif
   if ( -d $nasscr ) then
   set sdir=' (#### will be recreated ####)'
   endif
   if ( -e  $ft06 ) then
   set sft06=' (#### will be replaced ####)'
   endif
   if ( -e $ft03 ) then 
   set sft03=' (#### will be replaced ####)'
   endif
   if ( -e $ft01 ) then 
   set sft01=' (#### will be replaced ####)'
   endif
   if ( -e "$ft11" ) then 
   set sft11=' (#### will be replaced ####)'
   else
   set sft11=
   endif
   if ( -e  $script ) then 
   set sscript=' (#### will be replaced ####)'
   endif
echo '  (i)  Input file       ===> '$ft05   $sft05      
echo '  (o)  Output file      ===> '$ft06   $sft06
echo '  (l)  Logfile          ===> '$ft03   $sft03
echo '  (s)  Script file      ===> '$script $sscript
echo '  (pu) Punch file       ===> '$ft01   $sft01
echo '  (pl) Plot file        ===> '$plt2   $splt2
echo '  (c)  Checkpoint NPTP  ===> '$nptp   $snptp
echo '  (d)  Checkpoint dict. ===> '$ft04   $sft04
echo '  (r)  Restart OPTP     ===> '$optp   $soptp
echo '  (ou) FTN11 file       ===> '$ft11   $sft11
echo '  (in) FTN12 file       ===> '$ft12   $sft12
echo '  (s1) SOF1 file        ===> '$sof1   $ssof1
echo '  (s2) SOF2 file        ===> '$sof2   $ssof2
echo '  (i1) FTN15 file       ===> '$ft15   $sft15
echo '  (i2) FTN16 file       ===> '$ft16   $sft16
echo ' '
echo '  (oc) Memory for Open Core    ===> '$ocmem
echo '  (im) In-Memory DB Allocation ===> '$dbmem
echo '  (w)  Work Directory ===> '$nasscr $sdir
echo '  (g)  To create shell script and execute NASTRAN'
echo '  (a)  Abort without building shell script'
echo
echo -n ' Specify Option ===> ' 
set  opt = $<
   switch ($opt) 
     case 'im':
     case 'Im':
     case 'iM':
     case 'IM':
        echo -n 'Please give allocation (in words) for in-memory db ===> '
        set dbmem = $<
        breaksw
     case 'oc':
     case 'Oc':
     case 'oC':
     case 'OC':
        echo -n 'Please give allocation (in words) for open core ===> '
        set ocmem = $<
        breaksw
     case 'a':
     case 'A':
     case 'q':
     case 'Q':
	clear
	exit
	breaksw
     case 'i':
     case 'I':
     echo ' '
	set ok=i1
	while ( $ok != i0 )
	   echo -n 'Please give input file ===> '
	   set ft05 = $<
	      if ( ! -e $ft05 ) then
	      echo $ft05 'does not exist'
	      else set ok = i0
                if ( -e nogood1 ) then
                rm nogood1
                endif
                if ( -e nogood2 ) then
                rm nogood2
                endif
                if ( -e nogood3 ) then
                rm nogood3
                endif
	      $naschk < $ft05
	      set sft05=
              set nptp=$probname.nptp
              set ft04=none
              set plt2=none
	         if ( -e nogood1 ) then
		 set ft04=$probname.dic
                 rm nogood1
		 endif
		 if ( -e nogood2 ) then 
		 set plt2=$probname.plt
                 rm nogood2
		 endif
		 if ( -e nogood3 ) then 
		 set ft04=$probname.dic
		 set plt2=$probname.plt
                 rm nogood3
		 endif
	      endif
	   end
	 breaksw
       case 'G':
       case 'g':
	 set nogo=0
	 clear
	    if ( ! -e $ft05 ) then 
	    echo '                ERROR'
	    echo ' '
	    echo $ft05 'does not exist--cannot create script'
	    set  nogo=i1
	    set  anything =$<
	    endif
	    if ( -d $nasscr ) then 
	    echo ' '
	    echo ' '
	    echo '                  WARNING'
	    echo ' '
	    echo 'Directory '$nasscr ' exists.  It will be recreated.'
	    echo 'All existing files in this directory will be lost!!!'
	    echo ' '
	    echo -n 'Are you sure you want this to happen? (y or n) '
	    set ans = $<
	       if (  $ans != 'y' ) then 
	       set nogo=i1
	       endif
	    endif
	  breaksw
     case 'r':
     case 'R':
	echo ' '
	set ok=i1
	while ( $ok != i0 )
	   echo -n 'Please give restart OPTP file ===> '
	   set  optp = $<
	      if ( ! -e $optp ) then 
	      echo $optp '(#### does not exist ####)'
	      else set ok=i0
	      endif
	   end
	 breaksw
     case 's1':
     case 'S1':
	echo ' '
        echo -n 'Please give SOF1 file ===> ' 
	set  sof1 = $<
	   if ( ! -e $sof1 ) then 
	   set  ssof1='(#### does not exist ####)'
	   else set ssof1=
	   endif
	 breaksw
     case 's2':
     case 'S2':
	echo ' '
        echo -n 'Please give SOF2 file ===> ' 
	set  sof2 = $<
	   if ( ! -e $sof2 ) then 
	   set ssof2='(#### does not exist ####)'
	   else set ssof2=
	   endif
	 breaksw
     case 'RD':
     case 'Rd':
     case 'rd':
     case 'rD':
	echo ' '
	set ok=i1
	while ( $ok != i0 )
	   echo -n 'Please give restart dict ===> '
	   set ft08 = $<
	      if ( ! -e $ft08 ) then 
	      echo $ft08='(#### does not exist ####)'
	      else set ok=i0
	      set sft08=
	      endif
	   end
	 breaksw
     case 'in':
     case 'IN':
     case 'In':
     case 'iN':
	echo ' '
	set ok=i1
	while ($ok != i0 )
	   echo -n 'Please give in12 file ===> '
	   set ft12 = $<
	      if ( ! -e $ft12  ) then 
              set sft12='(#### does not exist ####)'
              set ok=i0
              else
	      set sft12=
              set ok=i0
	      endif
	   end
	 breaksw
     case 'ou':
     case 'OU':
     case 'Ou':
     case 'oU':
	echo ' '
	set ok=i1
	while ($ok != i0 )
	   echo -n 'Please give out11 file ===> '
	   set ft11 = $<
	      if ( -e  $ft11 ) then 
	      set sft11=
	      set ok=i0
	      else set ok=i0
	      set sft11='**** will be replaced ****'
	      endif
	   end
	 breaksw
     case 'i1':
     case 'I1':
	echo ' '
	set ok=i1
	while ($ok != i0 )
	   echo -n 'Please give FT15 file ===> '
	   set ft15 = $<
	      if ( -e  $ft15 ) then 
	      set sft15=
	      set ok=i0
	      else set ok=i0
	      set sft15='**** will be replaced ****'
	      endif
	   end
	 breaksw
     case 'i2':
     case 'I2':
	echo ' '
	set ok=i1
	while ($ok != i0 )
	   echo -n 'Please give FT16 file ===> '
	   set ft16 = $<
	      if ( -e  $ft16 ) then 
	      set sft16=
	      set ok=i0
	      else set ok=i0
	      set sft16='**** will be replaced ****'
	      endif
	   end
	 breaksw
     case 'O':
     case 'o':
	echo ' '
	set ok=i1
	while ( $ok != i0 )
	   echo -n 'Please give output file ===> '
	   set  ft06 = $<
	      if ( -e $ft06 ) then
	      echo -n $ft06 'exist, do you want to keep it? (y or n) '
	      set  ans = $<
		 if (  $ans == 'n' ) then
		 rm $ft06
		 set ok=i0
		 endif
	      else set ok=i0
	      endif
	   end
	 breaksw
     case 'l':
     case 'L':
	echo ' '
	set ok=i1
	while ( $ok != i0 )
	   echo -n 'Please give log file ===> '
	   set  ft03 = $<
	      if ( -e  $ft03 ) then
	      echo -n $ft03 'exist, do you want to keep it? (y or n) '
	      set ans = $<
		 if ( $ans == 'n' ) then 
		 rm $ft03
		 set ok=i0
		 endif
	      else set ok=i0
	      endif
	   end
	 breaksw
     case 'd':
     case 'D':
	echo ' '
	set ok=i1
	while ( $ok != i0 )
	   echo -n 'Please give checkpoint dict. ===> '
	   set ft04 = $<
	      if ( -e  $ft04 ) then 
	      echo -n $ft04 'exist, do you want to keep it? (y or n) '
	      set ans = $<
		 if ( $ans == 'n' ) then
		 rm $ft04
		 set ok = i0
		 endif
	      else set ok = i0
	      endif
	   end
	 breaksw
     case 'pu':
     case 'Pu':
     case 'pU':
     case 'PU':
	echo ' '
	set ok=i1
	while ( $ok != i0 )
	   echo -n 'Please give punch file ===> '
	   set  ft01 =  $<
	      if ( -e  $ft01 ) then
	      echo -n $ft01 'exist, do you want to keep it? (y or n) '
	      set  ans = $<
		 if ( $ans == 'n' ) then
		 rm $ft01
		 set ok = i0
		 endif
	      else set ok = i0
	      endif
	   end
	 breaksw
     case 's':
     case 'S':
	echo ' '
	set ok=i1
	while ( $ok != i0 )
	   echo -n 'Please give script file ===> '
	   set  script = $<
	      if ( -e  $script ) then 
	      echo -n $script 'exist, do you want to keep it? (y or n) '
	      set ans = $<
		 if ( $ans == 'n' ) then 
		 rm $script
		 set ok = i0
		 endif
	      else set ok = i0
	      endif
	   end
	 breaksw
     case 'c':
     case 'C':
	echo ' '
	set ok = i1
	while (  $ok != i0 )
	   echo -n 'Please give checkpoint NPTP file ===> '
	   set nptp = $<
	      if ( -e  $nptp ) then 
	      echo -n $nptp 'exist, do you want to keep it? (y or n) '
	      set ans = $<
		 if ( $ans == 'n' ) then 
		 rm $nptp
		 set ok = i0
		 endif
	      else set ok = i0
	      endif
	   end
	 breaksw
     case 'w':
     case 'W':
	echo ' '
	echo -n 'Please give work directory ===> '
	set  nasscr = $<
	breaksw 
     case 'pl':
     case 'Pl':
     case 'pL':
     case 'PL':
	echo ' '
	set ok = i1
	while ( $ok != i0 )
	   echo -n 'Please give plot file ===> '
	   set plt2 = $<
	      if ( -e '$plt2' ) then 
	      echo -n $plt2 'exist, do you want to keep it? (y or n) '
	      set  ans =$<
		 if ( $ans == 'n' ) then 
		 then rm $plt2
		 set ok = i0
		 endif
	      else set ok = i0
	      endif
	   end
	 breaksw
   endsw
end
if ( -e $script ) then 
rm $script
endif
echo '#/bin/csh' >> $script
echo ' unalias rm ' >> $script
echo 'if ( -d ' $nasscr' ) then' >> $script
echo 'rm -r '$nasscr >> $script
echo 'endif' >> $script
echo 'mkdir '$nasscr >> $script
echo 'if ( -e '$nptp ' ) then'>> $script
echo 'rm '$nptp >> $script
echo 'endif' >> $script
echo 'if ( -e '$ft03 ' ) then'>> $script
echo 'rm '$ft03 >> $script
echo 'endif' >> $script
echo 'if ( -e '$ft01 ' ) then'>> $script
echo 'rm '$ft01 >> $script
echo 'endif' >> $script
echo 'if ( -e '$ft04 ' ) then'>> $script
echo 'rm '$ft04 >> $script
echo 'endif' >> $script
echo 'if ( -e '$ft06 ' ) then'>> $script
echo 'rm '$ft06 >> $script
echo 'endif' >> $script
echo 'if ( -e '$plt2 ' ) then'>> $script
echo 'rm '$plt2 >> $script
echo 'endif' >> $script
echo 'echo ==== NASTRAN is beginning execution of "'$probname'" ====' >> $script
echo ' env  NPTPNM='$nptp '\' >> $script 
echo '  PLTNM='$plt2 ' DICTNM='$ft04 ' PUNCHNM='$ft01 '\' >> $script 
echo '  FTN11='$ft11 ' FTN12='$ft12 ' DIRCTY='$nasscr '\' >> $script 
echo '  LOGNM='$ft03 ' OPTPNM='$optp ' RFDIR='$rfdir '\' >> $script 
echo '  FTN13=none SOF1='$sof1 ' SOF2='$sof2  '\' >> $script 
echo '  FTN14=none FTN17=none FTN18=none FTN19=none FTN20=none \' >> $script
echo '  FTN15='$ft15 ' FTN16='$ft16  '\' >> $script 
echo '  FTN21=none FTN22=none FTN23=none \' >> $script 
echo '  DBMEM='$dbmem ' OCMEM='$ocmem '\' >> $script
echo    $nasexec' < '$ft05' >'$ft06 >> $script
echo 'rm -r '$nasscr >> $script
echo 'if ( -e none  ) then'>> $script
echo 'rm none' >> $script
echo 'endif' >> $script
# echo 'rm COS*' >> $script
echo 'echo   ===== NASTRAN has completed problem "'$probname'" ====='>> $script
clear 
echo 'The shell script '$script' was successfully created'
echo
echo -n 'Do you want to execute this problem now? (y or n) ===> '
chmod +x $script
set ans = $<
   if ( $ans == 'y' ) then
   echo ' '
   echo -n 'Do you want to run in foreground or background? (f or b) ===> '
   set ans = $<
      if ( $ans == 'f' ) then
      $cwd/$script
      else
      $cwd/$script &
      endif
   else echo ' '
   echo 'Type the command "'$script'" to execute this problem intereactively'
   echo '                            OR '
   echo '  the command "'$script' &"  to execute this problem in batch'
   endif
